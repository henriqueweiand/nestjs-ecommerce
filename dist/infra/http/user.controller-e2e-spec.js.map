{"version":3,"sources":["../../../src/infra/http/user.controller-e2e-spec.ts"],"sourcesContent":["import { CreateUserUseCase } from '@app/application/ecommerce/use-case/create-user';\nimport { GetUserUseCase } from '@app/application/ecommerce/use-case/get-user';\nimport { Test } from '@nestjs/testing';\nimport request from 'supertest';\nimport { CacheManagerModule } from '../persistence/cache/cache.module';\nimport { PersistenceModule } from '../persistence/persistence.module';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UserController } from './user.controller';\n\ndescribe('UsersController', () => {\n    let httpServer: any;\n    let app: any;\n\n    beforeAll(async () => {\n        const moduleRef = await Test.createTestingModule({\n            imports: [\n                CacheManagerModule,\n                PersistenceModule.register({\n                    type: 'mongoose',\n                    global: true,\n                }),\n            ],\n            controllers: [UserController],\n            providers: [CreateUserUseCase, GetUserUseCase],\n        }).compile();\n\n        app = moduleRef.createNestApplication();\n        await app.init();\n\n        httpServer = app.getHttpServer();\n    });\n\n    afterAll(async () => {\n        await app.close();\n    });\n\n    describe('UserController', () => {\n        it('should create user', async () => {\n            const createDto: CreateUserDto = {\n                name: 'Jonh Doe',\n            };\n            const response = await request(httpServer)\n                .post('/user')\n                .send(createDto);\n\n            expect(response.status).toBe(201);\n            expect(response.body.props.name).toEqual(createDto.name);\n        });\n    });\n});\n"],"names":["describe","httpServer","app","beforeAll","moduleRef","Test","createTestingModule","imports","CacheManagerModule","PersistenceModule","register","type","global","controllers","UserController","providers","CreateUserUseCase","GetUserUseCase","compile","createNestApplication","init","getHttpServer","afterAll","close","it","createDto","name","response","request","post","send","expect","status","toBe","body","props","toEqual"],"mappings":";;;;4BAAkC;yBACH;yBACV;kEACD;6BACe;mCACD;gCAEH;;;;;;AAE/BA,SAAS,mBAAmB;IACxB,IAAIC;IACJ,IAAIC;IAEJC,UAAU;QACN,MAAMC,YAAY,MAAMC,aAAI,CAACC,mBAAmB,CAAC;YAC7CC,SAAS;gBACLC,+BAAkB;gBAClBC,oCAAiB,CAACC,QAAQ,CAAC;oBACvBC,MAAM;oBACNC,QAAQ;gBACZ;aACH;YACDC,aAAa;gBAACC,8BAAc;aAAC;YAC7BC,WAAW;gBAACC,6BAAiB;gBAAEC,uBAAc;aAAC;QAClD,GAAGC,OAAO;QAEVhB,MAAME,UAAUe,qBAAqB;QACrC,MAAMjB,IAAIkB,IAAI;QAEdnB,aAAaC,IAAImB,aAAa;IAClC;IAEAC,SAAS;QACL,MAAMpB,IAAIqB,KAAK;IACnB;IAEAvB,SAAS,kBAAkB;QACvBwB,GAAG,sBAAsB;YACrB,MAAMC,YAA2B;gBAC7BC,MAAM;YACV;YACA,MAAMC,WAAW,MAAMC,IAAAA,kBAAO,EAAC3B,YAC1B4B,IAAI,CAAC,SACLC,IAAI,CAACL;YAEVM,OAAOJ,SAASK,MAAM,EAAEC,IAAI,CAAC;YAC7BF,OAAOJ,SAASO,IAAI,CAACC,KAAK,CAACT,IAAI,EAAEU,OAAO,CAACX,UAAUC,IAAI;QAC3D;IACJ;AACJ"}