{"version":3,"sources":["../../../../../src/infra/persistence/cache/interceptor/http-cache.interceptor.ts"],"sourcesContent":["import { CacheInterceptor } from '@nestjs/cache-manager';\nimport { ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HttpCacheInterceptor extends CacheInterceptor {\n    trackBy(context: ExecutionContext): string | undefined {\n        const request = context.switchToHttp().getRequest();\n        const { httpAdapter } = this.httpAdapterHost;\n\n        const isGetRequest = httpAdapter.getRequestMethod(request) === 'GET';\n        const excludePaths = [\n            // Routes to be excluded\n        ];\n        if (\n            !isGetRequest ||\n            (isGetRequest &&\n                excludePaths.includes(httpAdapter.getRequestUrl(request)))\n        ) {\n            return undefined;\n        }\n        return httpAdapter.getRequestUrl(request);\n    }\n}"],"names":["HttpCacheInterceptor","CacheInterceptor","trackBy","context","request","switchToHttp","getRequest","httpAdapter","httpAdapterHost","isGetRequest","getRequestMethod","excludePaths","includes","getRequestUrl","undefined","Injectable"],"mappings":";;;;+BAIaA;;;eAAAA;;;8BAJoB;wBACY;;;;;;;AAGtC,IAAA,AAAMA,uBAAN,MAAMA,6BAA6BC,8BAAgB;IACtDC,QAAQC,OAAyB,EAAsB;QACnD,MAAMC,UAAUD,QAAQE,YAAY,GAAGC,UAAU;QACjD,MAAM,EAAEC,WAAW,EAAE,GAAG,IAAI,CAACC,eAAe;QAE5C,MAAMC,eAAeF,YAAYG,gBAAgB,CAACN,aAAa;QAC/D,MAAMO,eAAe,EAEpB;QACD,IACI,CAACF,gBACAA,gBACGE,aAAaC,QAAQ,CAACL,YAAYM,aAAa,CAACT,WACtD;YACE,OAAOU;QACX;QACA,OAAOP,YAAYM,aAAa,CAACT;IACrC;AACJ;AAlBaJ;IADZe,IAAAA,kBAAU;GACEf"}