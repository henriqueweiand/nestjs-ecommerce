{"version":3,"sources":["../../../../src/infra/persistence/mongoose/mongoose.module.ts"],"sourcesContent":["import { OrderProductRepository } from '@app/application/ecommerce/ports/order-product.repositoy';\nimport { OrderRepository } from '@app/application/ecommerce/ports/order.repositoy';\nimport { ProductRepository } from '@app/application/ecommerce/ports/product.repositoy';\nimport { UserRepository } from '@app/application/ecommerce/ports/user.repositoy';\nimport { EnvModule, EnvService } from '@app/infra/env';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule as MongooseModuleLib } from '@nestjs/mongoose';\nimport { OrderProduct, OrderProductSchema } from './entities/order-product.entity';\nimport { Order, OrderSchema } from './entities/order.entity';\nimport { Product, ProductSchema } from './entities/product.entity';\nimport { User, UserSchema } from './entities/user.entity';\n\n// Non exported\nimport { MongooseOrderProductRepository } from './repositories/mongoose-order-product.repositoy';\nimport { MongooseOrderRepository } from './repositories/mongoose-order.repositoy';\nimport { MongooseProductRepository } from './repositories/mongoose-product.repositoy';\nimport { MongooseUserRepository } from './repositories/mongoose-user.repositoy';\n\n@Module({\n    imports: [\n        MongooseModuleLib.forRootAsync({\n            imports: [EnvModule],\n            useFactory: (envService: EnvService) => ({\n                uri: envService.get('MONGODB_URL'),\n            }),\n            inject: [EnvService],\n        }),\n        MongooseModuleLib.forFeature([\n            { name: User.name, schema: UserSchema },\n            { name: Product.name, schema: ProductSchema },\n            { name: Order.name, schema: OrderSchema },\n            { name: OrderProduct.name, schema: OrderProductSchema },\n        ]),\n    ],\n    providers: [\n        {\n            provide: ProductRepository,\n            useClass: MongooseProductRepository\n        },\n        {\n            provide: UserRepository,\n            useClass: MongooseUserRepository\n        },\n        {\n            provide: OrderRepository,\n            useClass: MongooseOrderRepository\n        },\n        {\n            provide: OrderProductRepository,\n            useClass: MongooseOrderProductRepository\n        },\n    ],\n    exports: [ProductRepository, UserRepository, OrderRepository, OrderProductRepository],\n})\nexport class MongooseModule { }\n"],"names":["MongooseModule","Module","imports","MongooseModuleLib","forRootAsync","EnvModule","useFactory","envService","uri","get","inject","EnvService","forFeature","name","User","schema","UserSchema","Product","ProductSchema","Order","OrderSchema","OrderProduct","OrderProductSchema","providers","provide","ProductRepository","useClass","MongooseProductRepository","UserRepository","MongooseUserRepository","OrderRepository","MongooseOrderRepository","OrderProductRepository","MongooseOrderProductRepository","exports"],"mappings":";;;;+BAsDaA;;;eAAAA;;;uCAtD0B;gCACP;kCACE;+BACH;qBACO;wBACf;0BAC6B;oCACH;6BACd;+BACI;4BACN;+CAGc;wCACP;0CACE;uCACH;;;;;;;AAsChC,IAAA,AAAMA,iBAAN,MAAMA;AAAiB;AAAjBA;IApCZC,IAAAA,cAAM,EAAC;QACJC,SAAS;YACLC,wBAAiB,CAACC,YAAY,CAAC;gBAC3BF,SAAS;oBAACG,cAAS;iBAAC;gBACpBC,YAAY,CAACC,aAA4B,CAAA;wBACrCC,KAAKD,WAAWE,GAAG,CAAC;oBACxB,CAAA;gBACAC,QAAQ;oBAACC,eAAU;iBAAC;YACxB;YACAR,wBAAiB,CAACS,UAAU,CAAC;gBACzB;oBAAEC,MAAMC,gBAAI,CAACD,IAAI;oBAAEE,QAAQC,sBAAU;gBAAC;gBACtC;oBAAEH,MAAMI,sBAAO,CAACJ,IAAI;oBAAEE,QAAQG,4BAAa;gBAAC;gBAC5C;oBAAEL,MAAMM,kBAAK,CAACN,IAAI;oBAAEE,QAAQK,wBAAW;gBAAC;gBACxC;oBAAEP,MAAMQ,gCAAY,CAACR,IAAI;oBAAEE,QAAQO,sCAAkB;gBAAC;aACzD;SACJ;QACDC,WAAW;YACP;gBACIC,SAASC,mCAAiB;gBAC1BC,UAAUC,mDAAyB;YACvC;YACA;gBACIH,SAASI,6BAAc;gBACvBF,UAAUG,6CAAsB;YACpC;YACA;gBACIL,SAASM,+BAAe;gBACxBJ,UAAUK,+CAAuB;YACrC;YACA;gBACIP,SAASQ,6CAAsB;gBAC/BN,UAAUO,6DAA8B;YAC5C;SACH;QACDC,SAAS;YAACT,mCAAiB;YAAEG,6BAAc;YAAEE,+BAAe;YAAEE,6CAAsB;SAAC;IACzF;GACahC"}