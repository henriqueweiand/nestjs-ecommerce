{"version":3,"sources":["../../../../../src/infra/persistence/prisma/repositories/prisma-user.repositoy.ts"],"sourcesContent":["import { UserRepository } from \"@app/application/ecommerce/ports/user.repositoy\";\nimport { User } from \"@app/domain/ecommerce/user\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PrismaUserMapper } from \"../mapper/prisma-user-mapper\";\nimport { PrismaService } from \"../prisma.service\";\nimport { PrismaUserDetailsMapper } from \"../mapper/prisma-user-details-mapper\";\n\n@Injectable()\nexport class PrismaUserRepository implements UserRepository {\n    constructor(private prisma: PrismaService) { }\n\n    async findMany(): Promise<User[]> {\n        const users = await this.prisma.user.findMany({\n            include: {\n                orders: true\n            }\n        });\n\n        return users.map((item) => PrismaUserDetailsMapper.toDomain(item));\n    }\n\n    async create(user: User): Promise<User> {\n        const data = PrismaUserMapper.toPrisma(user);\n        const entity = await this.prisma.user.create({ data });\n\n        return PrismaUserMapper.toDomain(entity);\n    }\n\n    async appendOrder(userId: string, orderId: string): Promise<User> {\n        const user = await this.prisma.user.update({\n            where: { id: userId },\n            data: {\n                orders: {\n                    connect: { id: orderId }\n                }\n            }\n        });\n\n        return PrismaUserMapper.toDomain(user);\n    }\n}"],"names":["PrismaUserRepository","findMany","users","prisma","user","include","orders","map","item","PrismaUserDetailsMapper","toDomain","create","data","PrismaUserMapper","toPrisma","entity","appendOrder","userId","orderId","update","where","id","connect","constructor","Injectable"],"mappings":";;;;+BAQaA;;;eAAAA;;;wBANc;kCACM;+BACH;yCACU;;;;;;;;;;AAGjC,IAAA,AAAMA,uBAAN,MAAMA;IAGT,MAAMC,WAA4B;QAC9B,MAAMC,QAAQ,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC;YAC1CI,SAAS;gBACLC,QAAQ;YACZ;QACJ;QAEA,OAAOJ,MAAMK,GAAG,CAAC,CAACC,OAASC,gDAAuB,CAACC,QAAQ,CAACF;IAChE;IAEA,MAAMG,OAAOP,IAAU,EAAiB;QACpC,MAAMQ,OAAOC,kCAAgB,CAACC,QAAQ,CAACV;QACvC,MAAMW,SAAS,MAAM,IAAI,CAACZ,MAAM,CAACC,IAAI,CAACO,MAAM,CAAC;YAAEC;QAAK;QAEpD,OAAOC,kCAAgB,CAACH,QAAQ,CAACK;IACrC;IAEA,MAAMC,YAAYC,MAAc,EAAEC,OAAe,EAAiB;QAC9D,MAAMd,OAAO,MAAM,IAAI,CAACD,MAAM,CAACC,IAAI,CAACe,MAAM,CAAC;YACvCC,OAAO;gBAAEC,IAAIJ;YAAO;YACpBL,MAAM;gBACFN,QAAQ;oBACJgB,SAAS;wBAAED,IAAIH;oBAAQ;gBAC3B;YACJ;QACJ;QAEA,OAAOL,kCAAgB,CAACH,QAAQ,CAACN;IACrC;IA9BAmB,YAAY,AAAQpB,MAAqB,CAAE;aAAvBA,SAAAA;IAAyB;AA+BjD;AAhCaH;IADZwB,IAAAA,kBAAU;;;eAEqB,4BAAa,4BAAb,4BAAa;;GADhCxB"}