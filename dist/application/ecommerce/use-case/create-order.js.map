{"version":3,"sources":["../../../../src/application/ecommerce/use-case/create-order.ts"],"sourcesContent":["import { Order } from '@app/domain/ecommerce/order';\nimport { Injectable } from '@nestjs/common';\nimport { OrderRepository } from '../ports/order.repositoy';\nimport { OrderProduct } from '@app/domain/ecommerce/order-product';\n\ninterface CreateOrderUseCaseCommand {\n  user: string,\n  orderProduct: Pick<OrderProduct, 'product' | 'price'>[]\n}\n\n@Injectable()\nexport class CreateOrderUseCase {\n  constructor(\n    private orderRepository: OrderRepository,\n  ) { }\n\n  async execute({\n    user,\n    orderProduct\n  }: CreateOrderUseCaseCommand): Promise<Order> {\n    let total = 0;\n    const order = new Order({\n      user,\n    })\n\n    const createdOrderProduct = orderProduct.map((product) => {\n      total += product.price;\n\n      return new OrderProduct({\n        product: product.product,\n        price: product.price,\n      });\n    });\n\n    order.total = total;\n    order.orderProduct = createdOrderProduct;\n\n    const createdOrder = await this.orderRepository.create(order)\n    const response = await this.orderRepository.findById(createdOrder.id);\n\n    return response;\n  }\n}\n"],"names":["CreateOrderUseCase","execute","user","orderProduct","total","order","Order","createdOrderProduct","map","product","price","OrderProduct","createdOrder","orderRepository","create","response","findById","id","constructor","Injectable"],"mappings":";;;;+BAWaA;;;eAAAA;;;uBAXS;wBACK;gCACK;8BACH;;;;;;;;;;AAQtB,IAAA,AAAMA,qBAAN,MAAMA;IAKX,MAAMC,QAAQ,EACZC,IAAI,EACJC,YAAY,EACc,EAAkB;QAC5C,IAAIC,QAAQ;QACZ,MAAMC,QAAQ,IAAIC,YAAK,CAAC;YACtBJ;QACF;QAEA,MAAMK,sBAAsBJ,aAAaK,GAAG,CAAC,CAACC;YAC5CL,SAASK,QAAQC,KAAK;YAEtB,OAAO,IAAIC,0BAAY,CAAC;gBACtBF,SAASA,QAAQA,OAAO;gBACxBC,OAAOD,QAAQC,KAAK;YACtB;QACF;QAEAL,MAAMD,KAAK,GAAGA;QACdC,MAAMF,YAAY,GAAGI;QAErB,MAAMK,eAAe,MAAM,IAAI,CAACC,eAAe,CAACC,MAAM,CAACT;QACvD,MAAMU,WAAW,MAAM,IAAI,CAACF,eAAe,CAACG,QAAQ,CAACJ,aAAaK,EAAE;QAEpE,OAAOF;IACT;IA7BAG,YACE,AAAQL,eAAgC,CACxC;aADQA,kBAAAA;IACN;AA4BN;AA/Bab;IADZmB,IAAAA,kBAAU;;;eAGkB,+BAAe,4BAAf,+BAAe;;GAF/BnB"}